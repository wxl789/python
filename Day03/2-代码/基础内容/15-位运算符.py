# 位运算符： 对二进制数进行运算
# &    按位与运算符：参与运算的值对应位置均为1时，该位置才为1，否则为0
# |    按位或运算符：参与运算的值对应位置只要有一个为1时，该位置就为1，否则为0
# ~    按位取反运算符：  ~a  ==> -a-1
# ^    按位异或运算符：参与运算的值对应位置有且只有一个为1时，
#      该位置才为1，否则为0
# >>   右移运算符   x >> y  将x的二进制数向右移动y个位置
# <<   左移运算符   x << y  将x的二进制数向左移动y个位置

a = 13   # 1101
b = 10   # 1010
print(a & b)  # 8   1000
print(a | b)  # 15  1111
print(~a)     # -14
print(a ^ b)  # 7    0111

print(a >> 2)  # 3  0011
print(a << 2)  # 52 110100


# 2、运算符优先级
# 1 + (2 * 3)
# (1 + 2) * 3

# 小括号的优先级最高
'''
Lambda  #运算优先级最低
逻辑运算符: or
逻辑运算符: and
逻辑运算符:not
成员测试: in, not in
同一性测试: is, is not
比较: <,<=,>,>=,!=,==
按位或: |
按位异或: ^
按位与: &
移位: << ,>>
加法与减法: + ,-
乘法、除法与取余: *, / ,%
正负号: +x,-x
'''

