'''
手机、电脑： -->   一个完整的项目
屏幕、电池、摄像头、芯片： --> 函数
屏幕---两层  --> 一个函数  --> 封装

函数/方法/行为：在一个完整的项目中（代码量很大），一般会有很多重复使用的
代码，可以将这些重复使用的代码<<封装>>到一个<<函数>>中，以后想要使用这些
代码时，<<调用>>该函数即可。
封装：代码的整合

函数的本质：对功能性代码的封装
优点：1、简化代码结构
      2、增加代码的复用度(重复使用程度)
      3、如果想要修改某些功能或调试某些功能，只需要修改相应的函数即可，
      不用修改整个项目。bug
'''
'''
函数的定义：
格式：
def 函数名(参数列表):
    函数体语句
    return 表达式
1、def ：定义函数的关键字，函数的代码块以def关键字开始
2、函数名：该函数在调用时的名称，命名规则遵循标识符的命名规则
3、() ：参数列表的开始与结束，如果没有参数，小括号不能省略。
4、参数列表：格式:(参数1,参数2,...参数n) 传入函数的参数用, 隔开，
该参数在函数定义中叫做形参(形式参数),类似变量名称。
5、: ：函数体中的内容以冒号开始，四位缩进
6、函数体语句：该函数封装的功能模块
7、return：一般用于函数的结束，将信息返回给函数的调用者
8、表达式：即将返回给函数的调用者的信息
注：函数最后 return 表达式 可以省略，默认为 return None
注：函数仅定义，未调用时，该函数不会被执行。

函数的调用：
格式：
函数名(参数列表)
1、函数名：要执行的函数名称
2、()：参数列表的开始与结束，如果没有参数，小括号不能省略。
3、参数列表：格式:(参数1,参数2,...参数n) 传入函数的参数用, 隔开，
该参数在函数调用中叫做实参(实际参数),类似常量。

函数调用的本质：将实参传递给形参赋值的过程。

'''
'''
注：在python中，函数的调用必须在函数的声明之后。
'''



